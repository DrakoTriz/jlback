
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellidos: 'apellidos',
  direccion: 'direccion',
  email: 'email',
  telefono: 'telefono'
};

exports.Prisma.CiudadScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  precio_desplazamiento: 'precio_desplazamiento'
};

exports.Prisma.ServicioScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  descripcion: 'descripcion',
  precio: 'precio',
  duracion_minutos: 'duracion_minutos'
};

exports.Prisma.CitaScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  ciudadId: 'ciudadId',
  fecha: 'fecha',
  hora_inicio: 'hora_inicio',
  hora_fin: 'hora_fin',
  total: 'total',
  createdAt: 'createdAt'
};

exports.Prisma.CitaServicioScalarFieldEnum = {
  id: 'id',
  citaId: 'citaId',
  servicioId: 'servicioId',
  precio: 'precio',
  duracion_minutos: 'duracion_minutos'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  Ciudad: 'Ciudad',
  Servicio: 'Servicio',
  Cita: 'Cita',
  CitaServicio: 'CitaServicio'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\primi\\Desktop\\jlback\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\primi\\Desktop\\jlback\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Usuario {\n  id        Int    @id @default(autoincrement())\n  nombre    String\n  apellidos String\n  direccion String\n  email     String\n  telefono  String\n  citas     Cita[]\n}\n\nmodel Ciudad {\n  id                    Int    @id @default(autoincrement())\n  nombre                String\n  precio_desplazamiento Float\n  citas                 Cita[]\n}\n\nmodel Servicio {\n  id               Int            @id @default(autoincrement())\n  nombre           String\n  descripcion      String?\n  precio           Float\n  duracion_minutos Int\n  citaServicios    CitaServicio[]\n}\n\nmodel Cita {\n  id          Int            @id @default(autoincrement())\n  usuario     Usuario        @relation(fields: [usuarioId], references: [id])\n  usuarioId   Int\n  ciudad      Ciudad         @relation(fields: [ciudadId], references: [id])\n  ciudadId    Int\n  fecha       DateTime\n  hora_inicio DateTime\n  hora_fin    DateTime\n  total       Float\n  servicios   CitaServicio[]\n  createdAt   DateTime       @default(now())\n}\n\nmodel CitaServicio {\n  id               Int      @id @default(autoincrement())\n  cita             Cita     @relation(fields: [citaId], references: [id])\n  citaId           Int\n  servicio         Servicio @relation(fields: [servicioId], references: [id])\n  servicioId       Int\n  precio           Float\n  duracion_minutos Int\n}\n",
  "inlineSchemaHash": "f341259f40f765af72446d61c9067edaa7b4b72fc11b7710d07cae065c86dd2e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Usuario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellidos\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direccion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"citas\",\"kind\":\"object\",\"type\":\"Cita\",\"relationName\":\"CitaToUsuario\"}],\"dbName\":null},\"Ciudad\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"precio_desplazamiento\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"citas\",\"kind\":\"object\",\"type\":\"Cita\",\"relationName\":\"CitaToCiudad\"}],\"dbName\":null},\"Servicio\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"precio\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"duracion_minutos\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"citaServicios\",\"kind\":\"object\",\"type\":\"CitaServicio\",\"relationName\":\"CitaServicioToServicio\"}],\"dbName\":null},\"Cita\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"CitaToUsuario\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ciudad\",\"kind\":\"object\",\"type\":\"Ciudad\",\"relationName\":\"CitaToCiudad\"},{\"name\":\"ciudadId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fecha\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"hora_inicio\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"hora_fin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"servicios\",\"kind\":\"object\",\"type\":\"CitaServicio\",\"relationName\":\"CitaToCitaServicio\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CitaServicio\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cita\",\"kind\":\"object\",\"type\":\"Cita\",\"relationName\":\"CitaToCitaServicio\"},{\"name\":\"citaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"servicio\",\"kind\":\"object\",\"type\":\"Servicio\",\"relationName\":\"CitaServicioToServicio\"},{\"name\":\"servicioId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"precio\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"duracion_minutos\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

